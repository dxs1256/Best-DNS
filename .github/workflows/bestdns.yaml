name: Update BestDNS

on:
  workflow_dispatch:  # 手动触发
  repository_dispatch:
    types: [bestdns-update]  # 匹配触发事件的名称

permissions:
  contents: write  # 允许工作流推送代码

jobs:
  update-bestdns:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 这里可以添加具体的逻辑，例如解析 IP 并更新 DNS 配置
      - name: Execute BestDNS Logic
        run: |
          echo "BestDNS workflow triggered by ip.yaml"

      # 以下部分是运行 Fission 脚本
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify input files
        run: |
          if [ ! -f "Fission_ip.txt" ]; then
            echo "Error: Fission_ip.txt not found. Please include this file in the repository." >&2
            exit 1
          fi

          if [ ! -f "Fission_domain.txt" ]; then
            echo "Creating empty Fission_domain.txt."
            touch Fission_domain.txt
          fi

      - name: Run Fission script
        id: run-fission-script
        run: python Fission.py

      - name: Ping Domains and Update Fission_domain.txt
        if: steps.run-fission-script.outcome == 'success'
        run: |
          # 安装 parallel 工具（如果不存在）
          sudo apt-get update && sudo apt-get install -y parallel

          # 确保 Fission_domain_success.txt 存在，并清空文件（如果存在）
          > Fission_domain_success.txt

          # 读取 Fission_domain.txt 中的域名并并行进行 ping 测试
          cat Fission_domain.txt | parallel -j 10 "ping -c 1 -W 2 {} &>/dev/null && echo {} >> Fission_domain_success.txt || echo 'Failed to ping: {}' >> ping_errors.log"

          # 输出 ping 错误日志以帮助排查
          cat ping_errors.log

          # 检查 Fission_domain_success.txt 是否为空
          if [ ! -s Fission_domain_success.txt ]; then
            echo "Error: No domains reachable. Exiting." >&2
            exit 1
          fi

          # 更新 Fission_domain.txt 只保留能够 ping 通的域名
          mv Fission_domain_success.txt Fission_domain.txt

      - name: Commit and push output files
        if: steps.run-fission-script.outcome == 'success'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 添加并提交更改
          git add Fission_domain.txt
          git commit -m "Update Fission_domain.txt with reachable domains after ping [skip ci]"
          git push
