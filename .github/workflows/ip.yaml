name: Get Cloudflare IP Address

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch: # 手动触发

jobs:
  get_ip:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get IP Address
        id: get-ip
        run: |
          #!/bin/bash
          set -euo pipefail

          # Download webpage
          curl -s 'https://www.wetest.vip/page/cloudflare/address_v4.html' > webpage.html
          
          # Check if the file was created successfully
          if [[ ! -f webpage.html ]]; then
              echo "Error: Failed to download webpage. Check the URL."
              exit 1
          fi
          
          # Extract IP using xpath (more robust for dynamic HTML)
          ip=$(
            xmlstarlet sel -t -v "//tbody/tr[1]/td[2]/text()" webpage.html
          )

          # Check for successful extraction
          if [[ -z "$ip" ]]; then
            echo "Error: Could not extract IP address. Check the HTML structure or XPath expression."
            exit 1
          fi
          
          # Remove leading/trailing whitespace (important for clean IP)
          ip="${ip//[[:space:]]/}"

          echo "$ip" > Fission_ip.txt
          echo "::set-output name=cloudflareIp::${ip}"
          echo "::set-output name=cloudflareIpFile::Fission_ip.txt"

      - name: Display IP Address
        if: steps.get-ip.outputs.cloudflareIp
        run: |
          echo "Cloudflare IP Address: ${{ steps.get-ip.outputs.cloudflareIp }}"
          cat Fission_ip.txt
