name: Get Cloudflare IP Address

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch: # 手动触发

jobs:
  get_ip:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get IP Address
        id: get-ip
        run: |
          #!/bin/bash
          set -euo pipefail # Robust error handling
          
          # Use curl for web request
          curl -s 'https://www.wetest.vip/page/cloudflare/address_v4.html' > webpage.html
          
          #Check if the file is created and not empty
          if [[ ! -s webpage.html ]]; then
              echo "Error: webpage.html is empty or does not exist. Check the URL."
              exit 1
          fi
          
          # Use jq with error handling
          ip=$(jq -r '.html.body.div[2].div[2].div.div[2].div[2].table.tbody.tr[1].td[2]' webpage.html)
          
          if [[ -z "$ip" ]]; then
            echo "Error: Could not extract IP address. Check the HTML structure."
            exit 1
          fi
          
          echo "$ip" > Fission_ip.txt
          echo "::set-output name=cloudflareIp::${ip}"
          echo "::set-output name=cloudflareIpFile::Fission_ip.txt"

      - name: Display IP Address
        if: steps.get-ip.outputs.cloudflareIp
        run: |
          echo "Cloudflare IP Address: ${{ steps.get-ip.outputs.cloudflareIp }}"
          cat Fission_ip.txt
